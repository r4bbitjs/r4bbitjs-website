on:
    push:
        branches:
        - main
    pull_request:
        branches:
        - main
jobs:
    deploy:
      permissions:
        pages: write      # to deploy to Pages
        id-token: write   # to verify the deployment originates from an appropriate source      
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      env:
        ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
        ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js 18.x
          uses: actions/setup-node@v3
          with:
            node-version: 18.x
        - name: Setup pnpm
          uses: pnpm/action-setup@v2.2.4
          with:
            version: latest
        - name: Get pnpm store directory
          id: pnpm-cache
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        - uses: actions/cache@v3
          name: Setup pnpm cache
          with:
            path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-store-
        - name: Install dependencies
          run: pnpm install --frozen-lockfile
        - name: Build
          run: pnpm run build
        # ðŸ‘† Build steps
        - name: Setup Pages
          uses: actions/configure-pages@v3
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v2
          with:
            # ðŸ‘‡ Specify build output path
            path: build
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v2
          